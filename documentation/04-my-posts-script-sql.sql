-- MySQL Script generated by MySQL Workbench
-- s√°b 17 nov 2018 01:50:07 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Account` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Account` (
  `id` INT NOT NULL,
  `email` VARCHAR(66) NOT NULL,
  `password` TEXT NOT NULL,
  `dateRegistration` DATETIME NOT NULL,
  `lastAccess` DATETIME NOT NULL,
  `lastAccessLocation` VARCHAR(99) NULL,
  `isAdmin` TINYINT(1) NOT NULL DEFAULT 0,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `EMAIL_UNIQUE` ON `mydb`.`Account` (`email` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Author` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Author` (
  `id` INT NOT NULL,
  `idAccount` INT NOT NULL,
  `nickname` VARCHAR(33) NOT NULL,
  `name` VARCHAR(63) NOT NULL,
  `fullName` VARCHAR(77) NOT NULL,
  `photo` BLOB NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fkAccount`
    FOREIGN KEY (`idAccount`)
    REFERENCES `mydb`.`Account` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `NICKNAME_UNIQUE` ON `mydb`.`Author` (`nickname` ASC);

CREATE INDEX `ACCOUNT_INDEX` ON `mydb`.`Author` (`idAccount` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Post` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Post` (
  `id` INT NOT NULL,
  `idAuthor` INT NOT NULL,
  `title` VARCHAR(99) NOT NULL,
  `description` VARCHAR(333) NOT NULL,
  `content` TEXT NOT NULL,
  `note` VARCHAR(333) NULL,
  `datePublication` DATETIME NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  CONSTRAINT `fkAuthor`
    FOREIGN KEY (`idAuthor`)
    REFERENCES `mydb`.`Author` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `AUTHOR_INDEX` ON `mydb`.`Post` (`idAuthor` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Category` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Category` (
  `id` INT NOT NULL,
  `idAuthor` INT NOT NULL,
  `name` VARCHAR(99) NOT NULL,
  `description` VARCHAR(333) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fkAuthor`
    FOREIGN KEY (`idAuthor`)
    REFERENCES `mydb`.`Author` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `NAME_UNIQUE` ON `mydb`.`Category` (`name` ASC);

CREATE INDEX `AUTHOR_INDEX` ON `mydb`.`Category` (`idAuthor` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Tag` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Tag` (
  `id` INT NOT NULL,
  `idAuthor` INT NOT NULL,
  `name` VARCHAR(99) NOT NULL,
  `description` VARCHAR(333) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fkAuthor`
    FOREIGN KEY (`idAuthor`)
    REFERENCES `mydb`.`Author` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `NAME_UNIQUE` ON `mydb`.`Tag` (`name` ASC);

CREATE INDEX `AUTHOR_INDEX` ON `mydb`.`Tag` (`idAuthor` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Responsible`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Responsible` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Responsible` (
  `id` INT NOT NULL,
  `name` VARCHAR(63) NOT NULL,
  `email` VARCHAR(66) NOT NULL,
  `phone` VARCHAR(16) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `EMAIL_UNIQUE` ON `mydb`.`Responsible` (`email` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`PostComment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PostComment` ;

CREATE TABLE IF NOT EXISTS `mydb`.`PostComment` (
  `id` INT NOT NULL,
  `idPost` INT NOT NULL,
  `idResponsible` INT NOT NULL,
  `title` VARCHAR(33) NOT NULL,
  `comment` TEXT NOT NULL,
  `dateComment` DATETIME NOT NULL,
  `isPublic` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  CONSTRAINT `fkPost`
    FOREIGN KEY (`idPost`)
    REFERENCES `mydb`.`Post` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION,
  CONSTRAINT `fkResponsible`
    FOREIGN KEY (`idResponsible`)
    REFERENCES `mydb`.`Responsible` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `POST_INDEX` ON `mydb`.`PostComment` (`idPost` ASC);

CREATE INDEX `RESPONSIBLE_INDEX` ON `mydb`.`PostComment` (`idResponsible` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`PostHasTag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PostHasTag` ;

CREATE TABLE IF NOT EXISTS `mydb`.`PostHasTag` (
  `idPost` INT NOT NULL,
  `idTag` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`idPost`, `idTag`),
  CONSTRAINT `fkPost`
    FOREIGN KEY (`idPost`)
    REFERENCES `mydb`.`Post` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION,
  CONSTRAINT `fkTag`
    FOREIGN KEY (`idTag`)
    REFERENCES `mydb`.`Tag` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `TAG_INDEX` ON `mydb`.`PostHasTag` (`idTag` ASC);

CREATE INDEX `POST_INDEX` ON `mydb`.`PostHasTag` (`idPost` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`PostHasCategory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PostHasCategory` ;

CREATE TABLE IF NOT EXISTS `mydb`.`PostHasCategory` (
  `idPost` INT NOT NULL,
  `idCategory` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`idPost`, `idCategory`),
  CONSTRAINT `fkPost`
    FOREIGN KEY (`idPost`)
    REFERENCES `mydb`.`Post` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION,
  CONSTRAINT `fkCategory`
    FOREIGN KEY (`idCategory`)
    REFERENCES `mydb`.`Category` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `CATEGORY_INDEX` USING BTREE ON `mydb`.`PostHasCategory` (`idCategory` ASC);

CREATE INDEX `POST_INDEX` ON `mydb`.`PostHasCategory` (`idPost` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
